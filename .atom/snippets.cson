# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'.source.js':
  'Console log':
    'prefix': 'log'
    'body': 'console.log("${1:param}", $1)'
  'Console info':
    'prefix': 'info'
    'body': 'console.info($1)'
  # Jasmine test framework
  # ======================
  'Describe block':
    'prefix': 'des'
    'body': "describe('$1', () => {\n\t$2\n})"
  'It block':
    'prefix': 'it'
    'body': "it('$1', () => {\n\t$2\n})"
  'beforeEach block':
    'prefix': 'be'
    'body': "beforeEach(() => {\n\t$1\n})"
  'expect block':
    'prefix': 'ex'
    'body': 'expect(subject.$1).to$2'
  'toEqual':
    'prefix': 'toe'
    'body': 'toEqual($1)'
  'toBeDefined':
    'prefix': 'tod'
    'body': 'toBeDefined()'
  'toBeNotDefined':
    'prefix': 'todn'
    'body': 'toBeNotDefined()'

'.source.php':
  'Debug tag':
    'prefix': 'deb'
    'body': '<debug><?php $1; ?></debug>'
