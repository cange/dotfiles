[user]
	name = Christian Angermann
	email = christian.angermann@visable.com
  # GPG signing
	signingkey = EDD0FFDEFAE157A5

# GPG signing >
[commit]
	gpgsign = true
[gpg]
	program = /usr/local/MacGPG2/bin/gpg2
# < GPG signing

[alias]
	ci = commit
	co = checkout
	# View the current working tree status using the short format
	s = status -s
	st = status
	praise = blame
	lg = log --graph --pretty=format:'%Cblue%h%Creset - [%Cgreen%d%Creset] %s %Cred(%cr)%Creset' --abbrev-commit --date=relative

	# View the SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph
	# Diff
	d = diff --patch-with-stat
	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"
	# Clone a repository including all submodules
	c = clone --recursive
	# Commit all changes
	ca = !git add . && git add -u && git commit -a
	# Switch to a branch, creating it if necessary
	go = checkout -B
	# Undo a `git push`
	undopush = push -f origin HEAD^:master
[fetch]
  prune = true

[pager]
	color = true
[status]
	color = auto

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	# whitespace = space-before-tab,indent-with-non-tab,trailing-space
	editor = vim

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red
	new = green
	whitespace = white reverse
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = opendiff
#[diff]
	# tool = opendiff
	# external = opendiff

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
	remote = origin
	merge = refs/heads/master
[rerere]
	enabled = true
[push]
	default = simple
[pull]
	rebase = true
