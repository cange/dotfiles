# General
# ------------------------------------------------------------------------------
# Prototype
snippet proto
${1:module}.prototype.${2:method} = function (${3:argument}) {
	${4:// code…}
};
endsnippet

# Function
snippet fu
function ${1:name}(${2:args}) {
	${3}
}
endsnippet

# Anonymous Function
snippet f
function (${1:args}) {
	${2}
}
endsnippet

# if
snippet if
if (${1:true}) {
	${2}
}
endsnippet

# if ... else
snippet ife
if (${1:expression}) {
	${2}
}
else {
	${3}
}
endsnippet

# switch
snippet switch
switch (${1:expression}) {
	case '${2}':
		${3}
		break;
	default:
		${4}
}
endsnippet

# case
snippet case
case '${1}':
	${2}
	break;
${3}
endsnippet

# for (...) {...} (Incremental for-loop)
snippet fori
for (var ${2:i} = 0, len = ${1:array}.length; $2 < len; $2${3:++}) {
	${4:$1[$2]}
};
endsnippet

# for (...) {...} (Decremental for-loop)
snippet ford
for (var ${2:d} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
	${4:$1[$2]}
};
endsnippet

# while (...) {...}
snippet wh
while (${1:condition}) {
	${2:// code…}
}
# do...while
snippet do
do {
	${2:// code…}
} while (${1:condition});
endsnippet

# Object Method
snippet :f
${1:method_name}: function (${2:attribute}) {
	${4}
}${3:,}
endsnippet

# setTimeout function
snippet tout
	setTimeout(function () {${3}}${2}, ${1:10};
endsnippet

# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
endsnippet

# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
endsnippet

# logging with console
snippet log
	console.log('${1:value}', $1);
endsnippet

snippet log6
	console.log(\`${1:value} ${$1}\`);
endsnippet

snippet info
	console.info('${1:state}');
endsnippet
