#
# Jasmine test framework
#
snippet be
beforeEach(function () {
  $1
});
endsnippet

snippet de
describe('$1', function () {
  ${2}
});
endsnippet

snippet ex
expect($1).to${2}
endsnippet

snippet it
it('$1', function () {
  ${2}
});
endsnippet

snippet ru
runs(function () {
  $1
});
endsnippet

snippet wait
waitsFor(function () {
  $1
});
endsnippet

#
# Jasmine matcher
#
snippet to " HaveBeenCalled"
toHaveBeenCalled();
endsnippet

snippet to " HaveBeenCalledWith"
toHaveBeenCalledWith($1);
endsnippet

snippet to " Equal"
toEqual($1);
endsnippet

snippet to " Be"
toBe($1);
endsnippet

snippet to " BeTruthy"
toBeTruthy();
endsnippet

snippet to " BeFalsy"
toBeFalsy();
endsnippet

snippet to " BeDefined"
toBeDefined();
endsnippet

snippet to " BeUndefined"
toBeUndefined();
endsnippet

snippet to " Contain"
toContain($1);
endsnippet

snippet to "BeNull"
toBeNull();
endsnippet

snippet to "BeNaN"
toBeNaN();
endsnippet

snippet to "Match"
toMatch(/${1:pattern}/);
endsnippet

snippet to "Throw"
toThrow();
endsnippet

snippet to "ThrowError"
toThrowError(${1:matcher});
endsnippet

snippet to "BeLessThan"
toBeLessThan($1);
endsnippet

snippet to "BeGreaterThan"
toBeGreaterThan($1);
endsnippet

snippet to "BeCloseTo"
toBeCloseTo($1);
endsnippet
#
# Jasmine spies
#
snippet and "callThrough"
and.callThrough()
endsnippet

snippet and "returnValue"
and.returnValue($1)
endsnippet

snippet and "returnValues"
and.returnValue(${1:args})
endsnippet

snippet and "throwError"
and.throwError()
endsnippet

snippet and "callFake"
and.callFake(function () {
	$1
});
endsnippet

snippet and "stub"
and.stub();
endsnippet

snippet and "identity"
and.identity();
endsnippet
#
# Jasmine spy
#
snippet spy "spyOn"
spyOn(${1:subject}, '${2:method}');
endsnippet

snippet spy "Spy"
jasmine.createSpy($1);
endsnippet

snippet spy "SpyObj"
jasmine.createSpyObj($1, ['${2:methods}']);
endsnippet

snippet any
jasmine.anything()
endsnippet
