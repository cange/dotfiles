# General
# ------------------------------------------------------------------------------
snippet proto
	${1:module}.prototype.${2:method} = function (${3:argument}) {
		${4:// code…}
	};
snippet f # Object method
	${1:method_name}: function (${2:args}) {
		$3
	}${4:,}
snippet f # function
	function (${1:args}) {
		$2
	}
snippet f # function name
	function ${1:name}(${2:args}) {
		$2
	}
snippet if # if
	if (${1:true}) {
		${2}
	}
snippet if # if/else
	if (${1:expression}) {
		${2}
	}
	else {
		${3}
	}
snippet switch
	switch (${1:expression}) {
		case '${2}':
			${3}
			break;
		default:
			${4}
	}
snippet case
	case '${1}':
		${2}
		break;
	${3}
snippet for # Incremental
	for (var ${2:i} = 0, len = ${1:array}.length; $2 < len; $2${3:++}) {
		${4:$1[$2]}
	};
snippet for # Decremental
	for (var ${2:d} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:condition}) {
		${2:// code…}
	}
# do...while
snippet do
	do {
		${2:// code…}
	} while (${1:condition});
# setTimeout function
snippet tout
	setTimeout(function () {${3}}${2}, ${1:10};
# Get Elements
snippet get # tagName
	getElementsByTagName('${1}')$2
# Get Element
snippet get # id
	getElementById('${1}')$2
# logging with console
snippet log
	console.log('${1:value}', $1);
snippet info
	console.info('${1:state}');
