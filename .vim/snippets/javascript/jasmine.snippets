#
# Jasmine test framework
#
snippet be # ES5
	beforeEach(function () {
		${1}
	});
snippet be # ES6
	beforeEach(() => {
		${1}
	});
snippet de # ES5
	describe('${1}', function () {
		${2}
	});
snippet de # ES6
	describe('${1}', () => {
		${2}
	});
snippet ex
	expect(${1:actual}).to${2}
snippet it # ES5
	it('${1}', function () {
		${2}
	});
snippet it # ES6
	it('${1}', () => {
		${2}
	});
snippet ru
	runs(function () {
		${1}
	});
snippet wait
	waitsFor(function () {
		${1}
	});
#
# Jasmine matcher
#
snippet to "toHaveBeenCalled"
	toHaveBeenCalled();
snippet to "toHaveBeenCalledWith"
	toHaveBeenCalledWith($1);
snippet to "toEqual"
	toEqual($1);
snippet to "toBe"
	toBe($1);
snippet to "toBeTruthy"
	toBeTruthy();
snippet to "toBeFalsy"
	toBeFalsy();
snippet to "toBeDefined"
	toBeDefined();
snippet to "toBeUndefined"
	toBeUndefined();
snippet to "toContain"
	toContain($1);
snippet to "toBeNull"
	toBeNull();
snippet to "toBeNaN"
	toBeNaN();
snippet to "toMatch"
	toMatch(/${1:pattern}/);
snippet to "toThrow"
	toThrow();
snippet to "toThrowError"
	toThrowError(${1:matcher});
snippet to "toBeLessThan"
	toBeLessThan($1);
snippet to "toBeGreaterThan"
	toBeGreaterThan($1);
snippet to "toBeCloseTo"
	toBeCloseTo($1);
#
# Jasmine spies
#
snippet and "callThrough"
	and.callThrough()
snippet and "returnValue"
	and.returnValue($1)
snippet and "returnValues"
	and.returnValue(${1:args})
snippet and "throwError"
	and.throwError()
snippet and "callFake"
	and.callFake(function () {
		$1
	});
snippet and "stub"
	and.stub();
snippet and "identity"
	and.identity();
#
# Jasmine spy
#
snippet spy "spyOn"
	spyOn(${1:subject}, '${2:method}');
snippet spy "Spy"
	jasmine.createSpy($1);
snippet spy "SpyObj"
	jasmine.createSpyObj($1, ['${2:methods}']);
snippet any
	jasmine.anything()
