{
  "describe setup block": {
    "prefix": "describe",
    "body": "describe('${1:context}', () => {\n\tlet wrapper${2::any}\n\t$0\n})"
  },
  "describe(when…)": {
    "prefix": "when",
    "body": "describe('when ${1:condition}', () => {\n\t$2\n})$0"
  },
  "describe(with…)": {
    "prefix": "with",
    "body": "describe('with ${1:condition}', () => {\n\t$2\n})$3"
  },
  "it": {
    "prefix": "it(…",
    "body": "it('$1', () => {\n\t$0\n})"
  },
  "afterEach": {
    "prefix": "afterEach(…",
    "body": "afterEach(() => {\n\t$0\n})"
  },
  "beforeEach": {
    "prefix": "beforeEach(…",
    "body": "beforeEach(() => {\n\t$0\n})"
  },
  "expect(": {
    "prefix": "expect(",
    "body": "expect(${1|wrapper,subject|}.$1).to$0"
  },
  "only": {
    "prefix": ".only",
    "body": ".only"
  },
  "attributes": {
    "prefix": ".attributes",
    "body": ".attributes('$0')"
  },
  "vue wrapper debug": {
    "prefix": "logdebug",
    "body": "console.log(`--- $1$2.html(): %o`, ${1:wrapper}$2.html())"
  },
  "expect.arraytContaining": {
    "prefix": "arrayContaining",
    "body": "expect.arrayContaining([$1])$0"
  },
  "expect.objectContaining": {
    "prefix": "objectContaining",
    "body": "expect.objectContaining({$1})$0"
  },
  "expect.stringContaining": {
    "prefix": "stringContaining",
    "body": "expect.stringContaining('$1')$0"
  },
  "expect.stringMatching": {
    "prefix": "stringMatching",
    "body": "expect.stringMatching(/$1/)$0"
  },
  "toBeTruthy": {
    "prefix": "toBeTrue",
    "body": "toBe(true)$0"
  },
  "toBeFalsy": {
    "prefix": "toBeFalse",
    "body": "toBe(false)$0"
  },
  "specHelper": {
    "prefix": "specHelper",
    "body": "const specHelper = {\n\t$1: ($2) => {\n\t\t$3\n\t}$4\n}"
  }
}
