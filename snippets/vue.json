{
  "script - Component skeleton": {
    "prefix": "<script><template><style>",
    "body": [
      "<script setup lang=\"ts\">\n$0\n</script>\n",
      "<template>\n\n</template>\n",
      "<style scoped>\n\n</style>"
    ]
  },
  "template block": {
    "prefix": "<template>",
    "body": "<template>\n$1\n</template>\n"
  },
  "pre block debug": {
    "prefix": "<pre>",
    "body": "<pre>$1: {{ $1 }}</pre>\n"
  },
  "script block": {
    "prefix": "<script>",
    "body": "<script ${1:setup }lang=\"ts\">\n${0}\n</script>"
  },
  "i18n-t - Interpolation": {
    "prefix": "<i18n-t>",
    "body": "<i18n-t :keypath=\"${1:path}\" tag=\"$2:div}\">\n\t$0\n</i18n-t>"
  },
  "Define slot": {
    "prefix": "<slot>",
    "body": "<slot${1: name=\"$2\"}></slot>"
  },
  "Call slot": {
    "prefix": "<template v-slot>",
    "body": "<template v-slot:$1>\n\t$2\n</template>"
  },
  "watch": {
    "prefix": "watch",
    "body": "watch(\n\t() => $1,\n\t() => $2,\n\t{ immediate: ${3:true} }\n)"
  },
  "computed": {
    "prefix": "computed",
    "body": "computed(() => $1)"
  },
  "defineEmits": {
    "prefix": "emits",
    "body": "const emit = defineEmits<{\n$1: [${2:key}: ${3:type}]\n$0\n}>()"
  },
  "defineProps": {
    "prefix": "props",
    "body": "const props = defineProps<{\n${1:key}: ${2:type}\n}>()"
  },
  "withDefaults": {
    "prefix": "default props",
    "body": "interface Props {\n\t$1\n}\nconst props = withDefaults(defineProps<Props>(), {\n\t$0\n})"
  }
}
